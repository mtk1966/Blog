@using Blog.Data.Entites
@using Blog.Mcv
@using Blog.Data
@inject BlogDbContext DbContext
@model List<UserViewModel>
<div class="container">
<h2 class="white">User Roles Management</h2>

<form asp-controller="Home" asp-action="UserRole" method="get">
    <div class="input-group mb-3">
        <input type="text" class="form-control bg-black white" placeholder="Search by name" name="searchString" value="@ViewData["CurrentFilter"]">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="submit">Search</button>
        </div>
    </div>
</form>

@if (Model.Count == 0)
{
    <div class="alert alert-info">No users to manage.</div>
}
else
{
    <table class="table white">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <form asp-controller="Home" asp-action="UpdateUserRole" method="post">
                        <td>@user.Name</td>
                        <td>@user.Email</td>
                        <input type="hidden" name="userId" value="@user.Id" />
                        <td>
                            <select name="roleId" class="form-select">
                                @foreach (var role in (List<RoleEntity>)ViewBag.Roles)
                                {
                                    if (user.RoleId == role.Id)
                                    {
                                        <option value="@role.Id" selected>@role.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@role.Id">@role.Name</option>
                                    }
                                }
                            </select>
                        </td>
                        <td>
                            @if (User.HasPermission("Users.Edit", DbContext))
                            {
                                <button type="submit" class="btn btn-primary">Update</button>
                            }
                        </td>
                    </form>
                </tr>
            }
        </tbody>
    </table>

    <h3 class="white mt-5">Manage Roles</h3>
    <table class="table white">
        <thead>
            <tr>
                <th>Role Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var role in (List<RoleEntity>)ViewBag.Roles)
            {
                <tr>
                    <td>@role.Name</td>
                    <td>
                        @if (User.IsInRole("admin"))
                        {
                            <a asp-controller="Home" asp-action="EditRole" asp-route-id="@role.Id" class="btn btn-warning btn-sm">Edit</a>
                            <form asp-controller="Home" asp-action="DeleteRole" method="post" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this role?');">
                                <input type="hidden" name="id" value="@role.Id" />
                                <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
</div>